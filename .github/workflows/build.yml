name: Build, Validate and Test

on:
  schedule:
    # Weekday (22=10pm UTC). Evaluates to 8am AEST.
    - cron: '0 22 * * *'
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  full:
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event_name == 'push' || !github.event.pull_request.draft }}
    name: Full (Build, Validate, and Test)
    runs-on: ubuntu-latest

    services:
      database:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 32574:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      CI: GITHUB_ACTIONS
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER_PASSWORD: drupal
      MYSQL_USER_NAME: drupal
      MYSQL_DATABASE_NAME: drupal
      MYSQL_HOST: 127.0.0.1
      GH_BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      # github.head_ref is only defined on pull_request events.
      # When not a PR, github.ref_name has the branch name.

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          # the commit ID for the last commit to the head branch of the pull request
          # (the default is the last *merge* commit of the pull request merge branch)

      - name: Setup PHP and tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:2.6.6
          # See https://www.drupal.org/docs/getting-started/system-requirements/php-requirements#extensions
          extensions: curl, date, dom, filter, gd, hash, json, mbstring, mysql, pcre, PDO, pdo, pdo_mysql, session, SimpleXML, SPL, tokenizer, xml, xmlwriter
          ini-values: memory_limit=280M, max_execution_time=120
          coverage: none

      - name: Start MySQL Service
        run: sudo service mysql start

      - name: Prepare environment variables
        run: |
          echo "GITHUB_REF_NAME=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
          echo "COMPOSER_BIN=$(echo ${GITHUB_WORKSPACE}/vendor/bin)" >> $GITHUB_ENV
          echo "drush=$(echo ${GITHUB_WORKSPACE}/bin/drush)" >> $GITHUB_ENV
          echo "SCRIPT_DIR=$(echo ${GITHUB_WORKSPACE}/.github/scripts)" >> $GITHUB_ENV

      # Caching based on https://github.com/marketplace/actions/composer-php-actions#caching-dependencies-for-faster-builds
      - name: Determine Composer cache directory
        shell: bash
        run: "echo \"COMPOSER_CACHE_DIR=$(composer config cache-dir)\" >> $GITHUB_ENV"

      - name: Cache dependencies installed with Composer
        uses: actions/cache@v4
        with:
          path: |
            "${{ env.COMPOSER_CACHE_DIR }}"
            $GITHUB_WORKSPACE/vendor
            $GITHUB_WORKSPACE/web/core
            $GITHUB_WORKSPACE/web/libraries
            $GITHUB_WORKSPACE/web/modules/contrib
            $GITHUB_WORKSPACE/web/themes/contrib
            $GITHUB_WORKSPACE/web/profiles/contrib
          key: os-${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.nvm
          key: ${{ runner.os }}-build-${{ github.ref }}
      # Caching END

      - name: Composer install
        run: |
          composer validate
          composer --no-interaction --no-progress --prefer-dist --optimize-autoloader install

      - name: Setup environment variables
        run: |
          echo "$GITHUB_WORKSPACE/vendor/bin" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Validate composer
        run: composer validate --no-check-all --ansi

      - name: Show environment variables
        run: ls -alk ./bin

      - name: Prepare environment for application
        run: bash $SCRIPT_DIR/setup_app.sh

      - name: Setup Application
        run: |
          ./bin/drush si convivial --locale=en --db-url=mysql://drupal:drupal@127.0.0.1:3306/drupal --account-name=admin --account-pass=admin --site-name='Convivial Demo' --site-pass=admin
          ./bin/drush status

      - name: Start Application in background
        run: |
          ./bin/drush runserver localhost:8080 &
          until netstat -an 2>/dev/null | grep '8080.*LISTEN'; do true; done

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Prepare environment variables for cypress tests
        run: |
          which node
          node --version
          npm --version
          cp cypress.ci.default.json cypress.env.json

      - name: Install cypress dependencies
        run: |
          npm install
          npm list

      - name: Run Cypress Tests
        run: npx cypress run
